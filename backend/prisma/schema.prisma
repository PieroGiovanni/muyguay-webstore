// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  price       Decimal
  description String?
  brand       Brand        @relation(fields: [brandId], references: [id])
  brandId     Int
  category    Category     @relation(fields: [categoryId], references: [id])
  categoryId  Int
  tags        Int[]
  imgUrl      String?
  OrderItems  OrderItems[]
  Stock       Stock[]
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model Customer {
  id          Int     @id @default(autoincrement())
  name        String
  lastName    String
  email       String
  address     String?
  phoneNumber String
  Order       Order[]
}

model Order {
  id             Int           @id @default(autoincrement())
  customer       Customer      @relation(fields: [customerId], references: [id])
  customerId     Int
  date           DateTime
  totalAmount    Decimal
  paymentStatus  PaymentSatus?
  shippingStatus String?
  OrderItems     OrderItems[]
}

enum PaymentSatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

model OrderItems {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Stock {
  product       Product @relation(fields: [productId], references: [id])
  productId     Int
  stockQuantity Int

  @@id([productId, stockQuantity])
}
